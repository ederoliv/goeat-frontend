// Variáveis globais
const userDataString = sessionStorage.getItem('userData');
const userData = userDataString ? JSON.parse(userDataString) : null;

// Dados mock para demonstração (posteriormente virão da API)
const mockData = {
  salesData: {
    labels: ['01/12', '02/12', '03/12', '04/12', '05/12', '06/12', '07/12', '08/12', '09/12', '10/12'],
    revenue: [3200, 4100, 3800, 5200, 4900, 6100, 5500, 4800, 5300, 4600],
    orders: [32, 41, 38, 52, 49, 61, 55, 48, 53, 46]
  },
  productsData: [
    { name: 'Pizza Margherita', quantity: 156, revenue: 18720, percentage: 15.2 },
    { name: 'Hambúrguer Clássico', quantity: 134, revenue: 16080, percentage: 13.1 },
    { name: 'Lasanha Bolonhesa', quantity: 98, revenue: 14700, percentage: 11.9 },
    { name: 'Salada Caesar', quantity: 87, revenue: 10440, percentage: 8.5 },
    { name: 'Pizza Pepperoni', quantity: 76, revenue: 9120, percentage: 7.4 }
  ]
};

// Inicialização da página
document.addEventListener('DOMContentLoaded', function() {
  console.log('DOM carregado - Iniciando analytics');
  
  // Verificar se o usuário está autenticado
  if (!userData || !userData.token) {
    console.error('Usuário não autenticado ou token não encontrado');
    window.location.href = '../../loginPartner/index.html';
    return;
  }
  
  // Preencher nome do usuário
  const userNameElement = document.getElementById('userName');
  if (userNameElement) {
    userNameElement.textContent = userData.name || 'Parceiro';
  }
  
  // Aguardar um pouco para garantir que todos os elementos estejam no DOM
  setTimeout(() => {
    console.log('Inicializando analytics após timeout');
    initializeAnalytics();
  }, 100);
  
  // Configurar eventos
  setupEventListeners();
});

/**
 * Inicializa todos os componentes da página
 */
function initializeAnalytics() {
  console.log('Iniciando componentes de analytics');
  
  // Verificar se os elementos canvas existem antes de inicializar
  const salesCanvas = document.getElementById('sales-timeline-chart');
  const bestsellersCanvas = document.getElementById('products-bestsellers-chart');
  const categoriesCanvas = document.getElementById('products-categories-chart');
  
  console.log('Canvas encontrados:', {
    sales: !!salesCanvas,
    bestsellers: !!bestsellersCanvas,
    categories: !!categoriesCanvas
  });
  
  // Inicializar apenas os gráficos cujos canvas existem
  if (salesCanvas && typeof initializeSalesTimelineChart === 'function') {
    console.log('Inicializando gráfico de vendas');
    try {
      initializeSalesTimelineChart();
    } catch (error) {
      console.error('Erro ao inicializar gráfico de vendas:', error);
    }
  } else {
    console.warn('Canvas de vendas não encontrado ou função não disponível');
  }
  
  if (bestsellersCanvas && typeof initializeProductsBestsellersChart === 'function') {
    console.log('Inicializando gráfico de produtos mais vendidos');
    try {
      initializeProductsBestsellersChart();
    } catch (error) {
      console.error('Erro ao inicializar gráfico de produtos mais vendidos:', error);
    }
  } else {
    console.warn('Canvas de produtos mais vendidos não encontrado ou função não disponível');